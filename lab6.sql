
1.PL/SQL COLLECTIONS:
A. IN YOUR OWN WORDS, DESCRIBE WHAT A PL/SQL COLLECTION IS.
A PL/SQL COLLECTION IS GROUP OF ELEMENTS WHICH HAVE SAME DATA TYPE

B. WHICH OF THE FOLLOWING ARE COLLECTIONS AND WHICH ARE NOT?
1. A LIST OF ALL EMPLOYEES’ LAST NAMES
3. THE POPULATIONS OF ALL COUNTRIES IN EUROPE

C.WHAT IS THE DIFFERENCE BETWEEN AN INDEX BY TABLE AND A DATABASE TABLE SUCH AS
EMPLOYEES OR COUNTRIES?
INDEX BY TABLE IS BASED ON A SINGLE FIELD OR COLUMN. 
AS FOR A DATABASE TABLE SUCH ASEMPLOYEES OR COUNTRIES, 
IT REFLECTS MORE THAN ONE FIELD. 
DOESNT SUPPORT DML OPERATIONS 
(CAN't participate in selectors, can'T BE STORED IN TABLES)
DATABASE TABLES ARE STORED IN A DATABASE, ON DISK AND ARE THEREFORE PERMANENT. 
INDEX BY TABLE ARE PL/SQL VARIABLESSTORED IN A MEMORY AREA, 
AND ARE NOT PERMANENT.


D)INDEX BY TABLE IS BASED ON A SINGLE FIELD OR COLUMN. 
AS BY INDEX BY TABLE OF RECORDSIS BASED ON A COMPOSITE RECORD TYPE.

E. 
LOOK AT THE FOLLOWING CODE. DESCRIBE THE DIFFERENCE BETWEEN T_POPS AND
V_POPS_TAB. IS V_POPS_TAB AN INDEX BY TABLE OR AN INDEX BY TABLE OF RECORDS?
HOW DO YOU KNOW?
DECLARE
TYPE T_POPS IS TABLE OF COUNTRIES.POPULATION%TYPE
INDEX BY BINARY_INTEGER;
V_POPS_TAB T_POPS;

T_POPS DECLARES A TYPE AND V_POPS_TAB DECLARES A VARIABLE OF THAT TYPE. 
V_POPS_TAB IS AN INDEX BY TABLE (NOT OF RECORDS) 
CAUSE EACH ELEMENT IS A SINGLE SCALAR VARIABLE (A POPULATION VALUE).

2.
DECLARE 
	TYPE COUNTNAMES IS TABLE OF COUNTRIES.COUNTRY_NAME%TYPE 
		INDEX BY VARCHAR2(2); 
	VCOUNTNAMES COUNTNAMES; 
	CURSOR CURS1 IS 
		SELECT COUNTRY_ID, COUNTRY_NAME FROM COUNTRIES 
		WHERE REGION_ID = 5 ORDER BY COUNTRY_ID; 
	C_REC CURS1%ROWTYPE; 
BEGIN 
	OPEN CURS1; 
		LOOP 
			FETCH CURS1 INTO C_REC; 
			EXIT WHEN CURS1%NOTFOUND; 
			VCOUNTNAMES(C_REC.COUNTRY_ID) := C_REC.COUNTRY_NAME; 
		END LOOP; 
	CLOSE CURS1; 
END;
///

B)

DECLARE 
	TYPE COUNTNAMES IS TABLE OF COUNTRIES.COUNTRY_NAME%TYPE
		INDEX BY VARCHAR2(2); 
	VCOUNTNAMES COUNTNAMES; 
	CURSOR CURS2 IS 
		SELECT COUNTRY_ID, COUNTRY_NAME FROM COUNTRIES 
            WHERE REGION_ID = 5 ORDER BY COUNTRY_ID; 
	V_COUNTRY_REC CURS2%ROWTYPE; 
BEGIN 
FOR C_REC IN
    (SELECT COUNTRY_ID, COUNTRY_NAME FROM COUNTRIES 
            WHERE REGION_ID = 5 ORDER BY COUNTRY_ID)
    LOOP
        VCOUNTNAMES(C_REC.COUNTRY_ID) := C_REC.COUNTRY_NAME; 
    END LOOP;
  FOR N IN 1..VCOUNTNAMES.COUNT 
  LOOP
    IF VCOUNTNAMES.EXISTS(N) THEN 
    DBMS_OUTPUT.PUT_LINE(VCOUNTNAMES(N));
    END IF; 
    END LOOP;
END;
 
C)
set serveroutput on
DECLARE 
  TYPE COUNTNAMES IS 
    TABLE OF COUNTRIES.COUNTRY_NAME%TYPE 
    INDEX BY VARCHAR2(2); 
  VCOUNTNAMES COUNTNAMES; 
  CURSOR C_CURS IS 
    SELECT COUNTRY_ID, COUNTRY_NAME FROM COUNTRIES 
    WHERE REGION_ID = 1 ORDER BY COUNTRY_ID; 
  V_COUNTRY_REC C_CURS%ROWTYPE; 
BEGIN 
  OPEN C_CURS; 
    LOOP 
      FETCH C_CURS INTO V_COUNTRY_REC; 
      EXIT WHEN C_CURS%NOTFOUND; 
      VCOUNTNAMES(V_COUNTRY_REC.COUNTRY_ID) := V_COUNTRY_REC.COUNTRY_NAME; 
    END LOOP; 
  CLOSE C_CURS; 
  DBMS_OUTPUT.PUT_LINE(VCOUNTNAMES.FIRST || ' ' || VCOUNTNAMES(VCOUNTNAMES.FIRST)); 
  DBMS_OUTPUT.PUT_LINE(VCOUNTNAMES.LAST || ' ' || VCOUNTNAMES(VCOUNTNAMES.LAST)); 
  DBMS_OUTPUT.PUT_LINE('number of countries is: ' || VCOUNTNAMES.COUNT); 
END;


3
A)
DECLARE 
	CURSOR E_CURS IS 
		SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID, SALARY FROM EMPLOYEES 
		ORDER BY EMPLOYEE_ID; 
	V_EREC E_CURS%ROWTYPE; 
	TYPE T_EDATA IS TABLE OF E_CURS%ROWTYPE 
        INDEX BY BINARY_INTEGER; 
	V_EDATA T_EDATA; 
BEGIN 
	OPEN E_CURS; 
		LOOP 
			FETCH E_CURS INTO V_EREC; 
			EXIT WHEN E_CURS%NOTFOUND; 
			V_EDATA(V_EREC.EMPLOYEE_ID) := V_EREC; 
		END LOOP; 
	CLOSE E_CURS; 
END;

B)
DECLARE 
	CURSOR E_CURS IS 
		SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID, SALARY FROM EMPLOYEES 
		ORDER BY EMPLOYEE_ID; 
	V_EREC E_CURS%ROWTYPE; 
	TYPE T_EDATA IS TABLE OF E_CURS%ROWTYPE 
        INDEX BY BINARY_INTEGER; 
	V_EDATA T_EDATA; 
BEGIN 
	OPEN E_CURS; 
		LOOP 
			FETCH E_CURS INTO V_EREC; 
			EXIT WHEN E_CURS%NOTFOUND; 
			V_EDATA(V_EREC.EMPLOYEE_ID) := V_EREC; 
		END LOOP; 
	CLOSE E_CURS; 
    FOR E IN V_EDATA.FIRST .. V_EDATA.LAST 
		LOOP 
			IF V_EDATA.EXISTS(E) THEN 
			DBMS_OUTPUT.PUT_LINE(V_EDATA(E).EMPLOYEE_ID || ' ' || V_EDATA(E).LAST_NAME || 
                ' ' || V_EDATA(E).JOB_ID || ' ' || V_EDATA(E).SALARY); 
			END IF; 
		END LOOP; 
END;
